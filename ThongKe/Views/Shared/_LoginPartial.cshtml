@using Microsoft.AspNetCore.Identity
@*@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> UserManager*@

<ul class="navbar-nav ml-auto">
    @*@if (signInManager.IsSignedIn(User))
    {*@
        <li class="nav-item dropdown">


            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @*<i class="fas fa-user">Welcome @await Component.InvokeAsync("UserName")!</i>*@
                @*<i class="fas fa-user">Welcome @UserManager.GetUserName(User)!</i>*@
                <i class="fas fa-user">Welcome !</i>
            </a>

            <div class="dropdown-menu dropdown-menu-right " aria-labelledby="navbarDropdownMenuLink">
                <div class="container">
                    <a asp-controller="Account" asp-action="ChangePassword" class="dropdown-item">Password</a>
                    <a asp-controller="Account" asp-action="Logout" class="dropdown-item">Logout</a>

                </div>
            </div>


        </li>
    @*}
    else
    {*@
        @*<a href="#" class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Register</a>
            <a asp-action="Login" asp-controller="Accounts" class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Login</a>*@
        @*<li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>*@

        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    @*}*@
</ul>